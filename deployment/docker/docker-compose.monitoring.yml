version: '3.8'

services:
  # ==================== 系统监控 ====================
  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: ai-travel-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - ai-travel-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.50.0
    container_name: ai-travel-cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - ai-travel-network

  # ==================== 数据库监控 ====================
  mysql-exporter:
    image: prom/mysqld-exporter:v0.16.0
    container_name: ai-travel-mysql-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "${MYSQL_USER:-ai_travel_user}:${MYSQL_PASSWORD:-SecureUserPass2024!}@(mysql-prod:3306)/"
    ports:
      - "9104:9104"
    depends_on:
      - mysql-prod
    networks:
      - ai-travel-network

  redis-exporter:
    image: oliver006/redis_exporter:v1.66.0
    container_name: ai-travel-redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: "redis://redis-prod:6379"
    ports:
      - "9121:9121"
    depends_on:
      - redis-prod
    networks:
      - ai-travel-network

  elasticsearch-exporter:
    image: prometheuscommunity/elasticsearch-exporter:v1.9.0
    container_name: ai-travel-elasticsearch-exporter
    restart: unless-stopped
    command:
      - '--es.uri=http://elasticsearch-prod:9200'
      - '--es.all'
      - '--es.indices'
      - '--es.shards'
    ports:
      - "9114:9114"
    depends_on:
      - elasticsearch-prod
    networks:
      - ai-travel-network

  # ==================== 应用性能监控 ====================
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.3.0
    container_name: ai-travel-nginx-exporter
    restart: unless-stopped
    command:
      - -nginx.scrape-uri=http://nginx-prod:80/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - nginx-prod
    networks:
      - ai-travel-network

  # ==================== 日志分析 ====================
  logstash:
    image: docker.elastic.co/logstash/logstash:8.16.0
    container_name: ai-travel-logstash
    restart: unless-stopped
    environment:
      - xpack.monitoring.enabled=false
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./logstash/config:/usr/share/logstash/pipeline:ro
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - api_logs_prod:/var/log/api:ro
      - chat_logs_prod:/var/log/chat:ro
      - agent_logs_prod:/var/log/agent:ro
      - rag_logs_prod:/var/log/rag:ro
      - user_logs_prod:/var/log/user:ro
    ports:
      - "5000:5000"
      - "9600:9600"
    depends_on:
      - elasticsearch-prod
    networks:
      - ai-travel-network

  # ==================== 告警管理 ====================
  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: ai-travel-alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    networks:
      - ai-travel-network

  # ==================== 分布式追踪 ====================
  jaeger:
    image: jaegertracing/all-in-one:1.64
    container_name: ai-travel-jaeger
    restart: unless-stopped
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - ai-travel-network

  # ==================== 应用性能监控 (APM) ====================
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.16.0
    container_name: ai-travel-apm-server
    restart: unless-stopped
    depends_on:
      - elasticsearch-prod
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - "8200:8200"
    volumes:
      - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    environment:
      - output.elasticsearch.hosts=["elasticsearch-prod:9200"]
      - apm-server.rum.enabled=true
      - setup.kibana.host="kibana:5601"
    networks:
      - ai-travel-network

  # ==================== 日志可视化 ====================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.0
    container_name: ai-travel-kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-prod:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-prod
    networks:
      - ai-travel-network

  # ==================== 网络监控 ====================
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.26.0
    container_name: ai-travel-blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    ports:
      - "9115:9115"
    networks:
      - ai-travel-network

  # ==================== 数据备份监控 ====================
  backup-monitor:
    image: prom/node-exporter:v1.8.2
    container_name: ai-travel-backup-monitor
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
      - '--collector.textfile.directory=/var/lib/node_exporter/textfile_collector'
    volumes:
      - /:/host:ro,rslave
      - backup_metrics:/var/lib/node_exporter/textfile_collector
    ports:
      - "9101:9100"
    networks:
      - ai-travel-network

# ==================== 网络 ====================
networks:
  ai-travel-network:
    external: true

# ==================== 数据卷 ====================
volumes:
  alertmanager_data:
    driver: local
  backup_metrics:
    driver: local
  # 引用生产环境的数据卷
  api_logs_prod:
    external: true
  chat_logs_prod:
    external: true
  agent_logs_prod:
    external: true
  rag_logs_prod:
    external: true
  user_logs_prod:
    external: true 