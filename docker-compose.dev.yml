version: '3.8'

networks:
  ai-travel-dev:
    driver: bridge

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  qdrant_dev_data:
    driver: local

services:
  # MySQL开发数据库
  mysql-dev:
    image: mysql:8.0
    container_name: ai-travel-mysql-dev
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=devpass123
      - MYSQL_DATABASE=travel_db_dev
      - MYSQL_USER=dev_user
      - MYSQL_PASSWORD=devpass
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./deployment/mysql/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-travel-dev
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis开发缓存
  redis-dev:
    image: redis:7.2-alpine
    container_name: ai-travel-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - ai-travel-dev
    restart: unless-stopped

  # Qdrant向量数据库开发环境
  qdrant-dev:
    image: qdrant/qdrant:v1.11.3
    container_name: ai-travel-qdrant-dev
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_dev_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - ai-travel-dev
    restart: unless-stopped

  # API网关开发服务
  api-gateway-dev:
    build: 
      context: ./services/api-gateway
      dockerfile: Dockerfile.dev
    container_name: ai-travel-api-dev
    ports:
      - "8000:8000"
    volumes:
      - ./services/api-gateway:/app
      - ./shared:/app/shared
      - /app/__pycache__
    environment:
      - ENV=development
      - DEBUG=true
      - HOT_RELOAD=true
      - DATABASE_URL=mysql+aiomysql://dev_user:devpass@mysql-dev:3306/travel_db_dev
      - REDIS_URL=redis://redis-dev:6379/0
      - QDRANT_URL=http://qdrant-dev:6333
    depends_on:
      - mysql-dev
      - redis-dev
      - qdrant-dev
    networks:
      - ai-travel-dev
    restart: unless-stopped
    command: >
      bash -c "pip install -e /app/shared &&
               uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  # 对话服务开发
  chat-service-dev:
    build: 
      context: ./services/chat-service
      dockerfile: Dockerfile.dev
    container_name: ai-travel-chat-dev
    ports:
      - "8001:8001"
    volumes:
      - ./services/chat-service:/app
      - ./shared:/app/shared
    environment:
      - ENV=development
      - DEBUG=true
      - REDIS_URL=redis://redis-dev:6379/1
    depends_on:
      - redis-dev
    networks:
      - ai-travel-dev
    restart: unless-stopped

  # n8n工作流开发环境
  n8n-dev:
    image: n8nio/n8n:1.65.1
    container_name: ai-travel-n8n-dev
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=development
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Asia/Shanghai
    volumes:
      - ./data/n8n-dev:/home/node/.n8n
      - ./deployment/n8n/workflows:/home/node/.n8n/workflows
    networks:
      - ai-travel-dev
    restart: unless-stopped

  # Jupyter开发环境
  jupyter-dev:
    build: 
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: ai-travel-jupyter-dev
    ports:
      - "8888:8888"
    volumes:
      - .:/workspace
      - ./data/notebooks:/workspace/notebooks
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=dev_token_123
    networks:
      - ai-travel-dev
    restart: unless-stopped
    command: >
      bash -c "pip install -r requirements.txt &&
               jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root"
